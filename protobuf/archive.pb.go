// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: archive.proto

package protobuf

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TickData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ComputorIndex  uint32                 `protobuf:"varint,1,opt,name=computor_index,json=computorIndex,proto3" json:"computor_index,omitempty"`
	Epoch          uint32                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	TickNumber     uint32                 `protobuf:"varint,3,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	Timestamp      uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	VarStruct      []byte                 `protobuf:"bytes,5,opt,name=var_struct,json=varStruct,proto3" json:"var_struct,omitempty"`
	TimeLock       []byte                 `protobuf:"bytes,6,opt,name=time_lock,json=timeLock,proto3" json:"time_lock,omitempty"`
	TransactionIds []string               `protobuf:"bytes,7,rep,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	ContractFees   []int64                `protobuf:"varint,8,rep,packed,name=contract_fees,json=contractFees,proto3" json:"contract_fees,omitempty"`
	SignatureHex   string                 `protobuf:"bytes,9,opt,name=signature_hex,json=signatureHex,proto3" json:"signature_hex,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TickData) Reset() {
	*x = TickData{}
	mi := &file_archive_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickData) ProtoMessage() {}

func (x *TickData) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickData.ProtoReflect.Descriptor instead.
func (*TickData) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{0}
}

func (x *TickData) GetComputorIndex() uint32 {
	if x != nil {
		return x.ComputorIndex
	}
	return 0
}

func (x *TickData) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *TickData) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *TickData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TickData) GetVarStruct() []byte {
	if x != nil {
		return x.VarStruct
	}
	return nil
}

func (x *TickData) GetTimeLock() []byte {
	if x != nil {
		return x.TimeLock
	}
	return nil
}

func (x *TickData) GetTransactionIds() []string {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *TickData) GetContractFees() []int64 {
	if x != nil {
		return x.ContractFees
	}
	return nil
}

func (x *TickData) GetSignatureHex() string {
	if x != nil {
		return x.SignatureHex
	}
	return ""
}

type GetTickDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickNumber    uint32                 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTickDataRequest) Reset() {
	*x = GetTickDataRequest{}
	mi := &file_archive_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTickDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickDataRequest) ProtoMessage() {}

func (x *GetTickDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickDataRequest.ProtoReflect.Descriptor instead.
func (*GetTickDataRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{1}
}

func (x *GetTickDataRequest) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

type GetTickDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickData      *TickData              `protobuf:"bytes,1,opt,name=tick_data,json=tickData,proto3" json:"tick_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTickDataResponse) Reset() {
	*x = GetTickDataResponse{}
	mi := &file_archive_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTickDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickDataResponse) ProtoMessage() {}

func (x *GetTickDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickDataResponse.ProtoReflect.Descriptor instead.
func (*GetTickDataResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{2}
}

func (x *GetTickDataResponse) GetTickData() *TickData {
	if x != nil {
		return x.TickData
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      string                 `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestId        string                 `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TickNumber    uint32                 `protobuf:"varint,4,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	InputType     uint32                 `protobuf:"varint,5,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	InputSize     uint32                 `protobuf:"varint,6,opt,name=input_size,json=inputSize,proto3" json:"input_size,omitempty"`
	InputHex      string                 `protobuf:"bytes,7,opt,name=input_hex,json=inputHex,proto3" json:"input_hex,omitempty"`
	SignatureHex  string                 `protobuf:"bytes,8,opt,name=signature_hex,json=signatureHex,proto3" json:"signature_hex,omitempty"`
	TxId          string                 `protobuf:"bytes,9,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_archive_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Transaction) GetDestId() string {
	if x != nil {
		return x.DestId
	}
	return ""
}

func (x *Transaction) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *Transaction) GetInputType() uint32 {
	if x != nil {
		return x.InputType
	}
	return 0
}

func (x *Transaction) GetInputSize() uint32 {
	if x != nil {
		return x.InputSize
	}
	return 0
}

func (x *Transaction) GetInputHex() string {
	if x != nil {
		return x.InputHex
	}
	return ""
}

func (x *Transaction) GetSignatureHex() string {
	if x != nil {
		return x.SignatureHex
	}
	return ""
}

func (x *Transaction) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type TransactionStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxId          string                 `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	MoneyFlew     bool                   `protobuf:"varint,2,opt,name=moneyFlew,proto3" json:"moneyFlew,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionStatus) Reset() {
	*x = TransactionStatus{}
	mi := &file_archive_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionStatus) ProtoMessage() {}

func (x *TransactionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionStatus.ProtoReflect.Descriptor instead.
func (*TransactionStatus) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionStatus) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TransactionStatus) GetMoneyFlew() bool {
	if x != nil {
		return x.MoneyFlew
	}
	return false
}

type TickTransactionsStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*TransactionStatus   `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickTransactionsStatus) Reset() {
	*x = TickTransactionsStatus{}
	mi := &file_archive_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickTransactionsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickTransactionsStatus) ProtoMessage() {}

func (x *TickTransactionsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickTransactionsStatus.ProtoReflect.Descriptor instead.
func (*TickTransactionsStatus) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{5}
}

func (x *TickTransactionsStatus) GetTransactions() []*TransactionStatus {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type QuorumTickData struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	QuorumTickStructure   *QuorumTickStructure   `protobuf:"bytes,1,opt,name=quorum_tick_structure,json=quorumTickStructure,proto3" json:"quorum_tick_structure,omitempty"`
	QuorumDiffPerComputor map[uint32]*QuorumDiff `protobuf:"bytes,2,rep,name=quorum_diff_per_computor,json=quorumDiffPerComputor,proto3" json:"quorum_diff_per_computor,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *QuorumTickData) Reset() {
	*x = QuorumTickData{}
	mi := &file_archive_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuorumTickData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumTickData) ProtoMessage() {}

func (x *QuorumTickData) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumTickData.ProtoReflect.Descriptor instead.
func (*QuorumTickData) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{6}
}

func (x *QuorumTickData) GetQuorumTickStructure() *QuorumTickStructure {
	if x != nil {
		return x.QuorumTickStructure
	}
	return nil
}

func (x *QuorumTickData) GetQuorumDiffPerComputor() map[uint32]*QuorumDiff {
	if x != nil {
		return x.QuorumDiffPerComputor
	}
	return nil
}

type QuorumTickStructure struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	Epoch                        uint32                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	TickNumber                   uint32                 `protobuf:"varint,3,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	Timestamp                    uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevResourceTestingDigestHex string                 `protobuf:"bytes,5,opt,name=prev_resource_testing_digest_hex,json=prevResourceTestingDigestHex,proto3" json:"prev_resource_testing_digest_hex,omitempty"`
	PrevSpectrumDigestHex        string                 `protobuf:"bytes,6,opt,name=prev_spectrum_digest_hex,json=prevSpectrumDigestHex,proto3" json:"prev_spectrum_digest_hex,omitempty"`
	PrevUniverseDigestHex        string                 `protobuf:"bytes,7,opt,name=prev_universe_digest_hex,json=prevUniverseDigestHex,proto3" json:"prev_universe_digest_hex,omitempty"`
	PrevComputerDigestHex        string                 `protobuf:"bytes,8,opt,name=prev_computer_digest_hex,json=prevComputerDigestHex,proto3" json:"prev_computer_digest_hex,omitempty"`
	TxDigestHex                  string                 `protobuf:"bytes,9,opt,name=tx_digest_hex,json=txDigestHex,proto3" json:"tx_digest_hex,omitempty"`
	PrevTransactionBodyHex       string                 `protobuf:"bytes,10,opt,name=prev_transaction_body_hex,json=prevTransactionBodyHex,proto3" json:"prev_transaction_body_hex,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *QuorumTickStructure) Reset() {
	*x = QuorumTickStructure{}
	mi := &file_archive_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuorumTickStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumTickStructure) ProtoMessage() {}

func (x *QuorumTickStructure) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumTickStructure.ProtoReflect.Descriptor instead.
func (*QuorumTickStructure) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{7}
}

func (x *QuorumTickStructure) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *QuorumTickStructure) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *QuorumTickStructure) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *QuorumTickStructure) GetPrevResourceTestingDigestHex() string {
	if x != nil {
		return x.PrevResourceTestingDigestHex
	}
	return ""
}

func (x *QuorumTickStructure) GetPrevSpectrumDigestHex() string {
	if x != nil {
		return x.PrevSpectrumDigestHex
	}
	return ""
}

func (x *QuorumTickStructure) GetPrevUniverseDigestHex() string {
	if x != nil {
		return x.PrevUniverseDigestHex
	}
	return ""
}

func (x *QuorumTickStructure) GetPrevComputerDigestHex() string {
	if x != nil {
		return x.PrevComputerDigestHex
	}
	return ""
}

func (x *QuorumTickStructure) GetTxDigestHex() string {
	if x != nil {
		return x.TxDigestHex
	}
	return ""
}

func (x *QuorumTickStructure) GetPrevTransactionBodyHex() string {
	if x != nil {
		return x.PrevTransactionBodyHex
	}
	return ""
}

type QuorumDiff struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	SaltedResourceTestingDigestHex string                 `protobuf:"bytes,1,opt,name=salted_resource_testing_digest_hex,json=saltedResourceTestingDigestHex,proto3" json:"salted_resource_testing_digest_hex,omitempty"`
	SaltedSpectrumDigestHex        string                 `protobuf:"bytes,2,opt,name=salted_spectrum_digest_hex,json=saltedSpectrumDigestHex,proto3" json:"salted_spectrum_digest_hex,omitempty"`
	SaltedUniverseDigestHex        string                 `protobuf:"bytes,3,opt,name=salted_universe_digest_hex,json=saltedUniverseDigestHex,proto3" json:"salted_universe_digest_hex,omitempty"`
	SaltedComputerDigestHex        string                 `protobuf:"bytes,4,opt,name=salted_computer_digest_hex,json=saltedComputerDigestHex,proto3" json:"salted_computer_digest_hex,omitempty"`
	ExpectedNextTickTxDigestHex    string                 `protobuf:"bytes,5,opt,name=expected_next_tick_tx_digest_hex,json=expectedNextTickTxDigestHex,proto3" json:"expected_next_tick_tx_digest_hex,omitempty"`
	SignatureHex                   string                 `protobuf:"bytes,6,opt,name=signature_hex,json=signatureHex,proto3" json:"signature_hex,omitempty"`
	SaltedTransactionBodyHex       string                 `protobuf:"bytes,7,opt,name=salted_transaction_body_hex,json=saltedTransactionBodyHex,proto3" json:"salted_transaction_body_hex,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *QuorumDiff) Reset() {
	*x = QuorumDiff{}
	mi := &file_archive_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuorumDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumDiff) ProtoMessage() {}

func (x *QuorumDiff) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumDiff.ProtoReflect.Descriptor instead.
func (*QuorumDiff) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{8}
}

func (x *QuorumDiff) GetSaltedResourceTestingDigestHex() string {
	if x != nil {
		return x.SaltedResourceTestingDigestHex
	}
	return ""
}

func (x *QuorumDiff) GetSaltedSpectrumDigestHex() string {
	if x != nil {
		return x.SaltedSpectrumDigestHex
	}
	return ""
}

func (x *QuorumDiff) GetSaltedUniverseDigestHex() string {
	if x != nil {
		return x.SaltedUniverseDigestHex
	}
	return ""
}

func (x *QuorumDiff) GetSaltedComputerDigestHex() string {
	if x != nil {
		return x.SaltedComputerDigestHex
	}
	return ""
}

func (x *QuorumDiff) GetExpectedNextTickTxDigestHex() string {
	if x != nil {
		return x.ExpectedNextTickTxDigestHex
	}
	return ""
}

func (x *QuorumDiff) GetSignatureHex() string {
	if x != nil {
		return x.SignatureHex
	}
	return ""
}

func (x *QuorumDiff) GetSaltedTransactionBodyHex() string {
	if x != nil {
		return x.SaltedTransactionBodyHex
	}
	return ""
}

type QuorumTickDataStored struct {
	state                 protoimpl.MessageState       `protogen:"open.v1"`
	QuorumTickStructure   *QuorumTickStructure         `protobuf:"bytes,1,opt,name=quorum_tick_structure,json=quorumTickStructure,proto3" json:"quorum_tick_structure,omitempty"`
	QuorumDiffPerComputor map[uint32]*QuorumDiffStored `protobuf:"bytes,2,rep,name=quorum_diff_per_computor,json=quorumDiffPerComputor,proto3" json:"quorum_diff_per_computor,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *QuorumTickDataStored) Reset() {
	*x = QuorumTickDataStored{}
	mi := &file_archive_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuorumTickDataStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumTickDataStored) ProtoMessage() {}

func (x *QuorumTickDataStored) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumTickDataStored.ProtoReflect.Descriptor instead.
func (*QuorumTickDataStored) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{9}
}

func (x *QuorumTickDataStored) GetQuorumTickStructure() *QuorumTickStructure {
	if x != nil {
		return x.QuorumTickStructure
	}
	return nil
}

func (x *QuorumTickDataStored) GetQuorumDiffPerComputor() map[uint32]*QuorumDiffStored {
	if x != nil {
		return x.QuorumDiffPerComputor
	}
	return nil
}

type QuorumDiffStored struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ExpectedNextTickTxDigestHex string                 `protobuf:"bytes,5,opt,name=expected_next_tick_tx_digest_hex,json=expectedNextTickTxDigestHex,proto3" json:"expected_next_tick_tx_digest_hex,omitempty"`
	SignatureHex                string                 `protobuf:"bytes,6,opt,name=signature_hex,json=signatureHex,proto3" json:"signature_hex,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *QuorumDiffStored) Reset() {
	*x = QuorumDiffStored{}
	mi := &file_archive_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuorumDiffStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumDiffStored) ProtoMessage() {}

func (x *QuorumDiffStored) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumDiffStored.ProtoReflect.Descriptor instead.
func (*QuorumDiffStored) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{10}
}

func (x *QuorumDiffStored) GetExpectedNextTickTxDigestHex() string {
	if x != nil {
		return x.ExpectedNextTickTxDigestHex
	}
	return ""
}

func (x *QuorumDiffStored) GetSignatureHex() string {
	if x != nil {
		return x.SignatureHex
	}
	return ""
}

type LastTickQuorumDataPerEpochIntervals struct {
	state                 protoimpl.MessageState    `protogen:"open.v1"`
	QuorumDataPerInterval map[int32]*QuorumTickData `protobuf:"bytes,1,rep,name=quorum_data_per_interval,json=quorumDataPerInterval,proto3" json:"quorum_data_per_interval,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *LastTickQuorumDataPerEpochIntervals) Reset() {
	*x = LastTickQuorumDataPerEpochIntervals{}
	mi := &file_archive_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LastTickQuorumDataPerEpochIntervals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastTickQuorumDataPerEpochIntervals) ProtoMessage() {}

func (x *LastTickQuorumDataPerEpochIntervals) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastTickQuorumDataPerEpochIntervals.ProtoReflect.Descriptor instead.
func (*LastTickQuorumDataPerEpochIntervals) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{11}
}

func (x *LastTickQuorumDataPerEpochIntervals) GetQuorumDataPerInterval() map[int32]*QuorumTickData {
	if x != nil {
		return x.QuorumDataPerInterval
	}
	return nil
}

type GetQuorumTickDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickNumber    uint32                 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuorumTickDataRequest) Reset() {
	*x = GetQuorumTickDataRequest{}
	mi := &file_archive_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuorumTickDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuorumTickDataRequest) ProtoMessage() {}

func (x *GetQuorumTickDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuorumTickDataRequest.ProtoReflect.Descriptor instead.
func (*GetQuorumTickDataRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{12}
}

func (x *GetQuorumTickDataRequest) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

type GetQuorumTickDataResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	QuorumTickData *QuorumTickData        `protobuf:"bytes,1,opt,name=quorum_tick_data,json=quorumTickData,proto3" json:"quorum_tick_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetQuorumTickDataResponse) Reset() {
	*x = GetQuorumTickDataResponse{}
	mi := &file_archive_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuorumTickDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuorumTickDataResponse) ProtoMessage() {}

func (x *GetQuorumTickDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuorumTickDataResponse.ProtoReflect.Descriptor instead.
func (*GetQuorumTickDataResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{13}
}

func (x *GetQuorumTickDataResponse) GetQuorumTickData() *QuorumTickData {
	if x != nil {
		return x.QuorumTickData
	}
	return nil
}

type GetQuorumTickDataResponseStored struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	QuorumTickData *QuorumTickDataStored  `protobuf:"bytes,1,opt,name=quorum_tick_data,json=quorumTickData,proto3" json:"quorum_tick_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetQuorumTickDataResponseStored) Reset() {
	*x = GetQuorumTickDataResponseStored{}
	mi := &file_archive_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuorumTickDataResponseStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuorumTickDataResponseStored) ProtoMessage() {}

func (x *GetQuorumTickDataResponseStored) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuorumTickDataResponseStored.ProtoReflect.Descriptor instead.
func (*GetQuorumTickDataResponseStored) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{14}
}

func (x *GetQuorumTickDataResponseStored) GetQuorumTickData() *QuorumTickDataStored {
	if x != nil {
		return x.QuorumTickData
	}
	return nil
}

type Computors struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         uint32                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	TickNumber    uint32                 `protobuf:"varint,2,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	Identities    []string               `protobuf:"bytes,3,rep,name=identities,proto3" json:"identities,omitempty"`
	SignatureHex  string                 `protobuf:"bytes,4,opt,name=signature_hex,json=signatureHex,proto3" json:"signature_hex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Computors) Reset() {
	*x = Computors{}
	mi := &file_archive_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Computors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computors) ProtoMessage() {}

func (x *Computors) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computors.ProtoReflect.Descriptor instead.
func (*Computors) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{15}
}

func (x *Computors) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Computors) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *Computors) GetIdentities() []string {
	if x != nil {
		return x.Identities
	}
	return nil
}

func (x *Computors) GetSignatureHex() string {
	if x != nil {
		return x.SignatureHex
	}
	return ""
}

type GetComputorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         uint32                 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetComputorsRequest) Reset() {
	*x = GetComputorsRequest{}
	mi := &file_archive_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetComputorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputorsRequest) ProtoMessage() {}

func (x *GetComputorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputorsRequest.ProtoReflect.Descriptor instead.
func (*GetComputorsRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{16}
}

func (x *GetComputorsRequest) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type GetComputorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Computors     *Computors             `protobuf:"bytes,1,opt,name=computors,proto3" json:"computors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetComputorsResponse) Reset() {
	*x = GetComputorsResponse{}
	mi := &file_archive_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetComputorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputorsResponse) ProtoMessage() {}

func (x *GetComputorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputorsResponse.ProtoReflect.Descriptor instead.
func (*GetComputorsResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{17}
}

func (x *GetComputorsResponse) GetComputors() *Computors {
	if x != nil {
		return x.Computors
	}
	return nil
}

// same as the response but internally used
type ComputorsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Computors     []*Computors           `protobuf:"bytes,1,rep,name=computors,proto3" json:"computors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputorsList) Reset() {
	*x = ComputorsList{}
	mi := &file_archive_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputorsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputorsList) ProtoMessage() {}

func (x *ComputorsList) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputorsList.ProtoReflect.Descriptor instead.
func (*ComputorsList) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{18}
}

func (x *ComputorsList) GetComputors() []*Computors {
	if x != nil {
		return x.Computors
	}
	return nil
}

type ProcessedTick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickNumber    uint32                 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	Epoch         uint32                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessedTick) Reset() {
	*x = ProcessedTick{}
	mi := &file_archive_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTick) ProtoMessage() {}

func (x *ProcessedTick) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTick.ProtoReflect.Descriptor instead.
func (*ProcessedTick) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{19}
}

func (x *ProcessedTick) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *ProcessedTick) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type GetStatusResponse struct {
	state                          protoimpl.MessageState            `protogen:"open.v1"`
	LastProcessedTick              *ProcessedTick                    `protobuf:"bytes,1,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
	ProcessedTickIntervalsPerEpoch []*ProcessedTickIntervalsPerEpoch `protobuf:"bytes,2,rep,name=processed_tick_intervals_per_epoch,json=processedTickIntervalsPerEpoch,proto3" json:"processed_tick_intervals_per_epoch,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_archive_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{20}
}

func (x *GetStatusResponse) GetLastProcessedTick() *ProcessedTick {
	if x != nil {
		return x.LastProcessedTick
	}
	return nil
}

func (x *GetStatusResponse) GetProcessedTickIntervalsPerEpoch() []*ProcessedTickIntervalsPerEpoch {
	if x != nil {
		return x.ProcessedTickIntervalsPerEpoch
	}
	return nil
}

type GetHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UpToDate      bool                   `protobuf:"varint,2,opt,name=up_to_date,json=upToDate,proto3" json:"up_to_date,omitempty"`
	ProcessedTick uint32                 `protobuf:"varint,3,opt,name=processed_tick,json=processedTick,proto3" json:"processed_tick,omitempty"`
	LiveEpoch     uint32                 `protobuf:"varint,4,opt,name=live_epoch,json=liveEpoch,proto3" json:"live_epoch,omitempty"`
	LiveTick      uint32                 `protobuf:"varint,5,opt,name=live_tick,json=liveTick,proto3" json:"live_tick,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthResponse) Reset() {
	*x = GetHealthResponse{}
	mi := &file_archive_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthResponse) ProtoMessage() {}

func (x *GetHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthResponse.ProtoReflect.Descriptor instead.
func (*GetHealthResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{21}
}

func (x *GetHealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetHealthResponse) GetUpToDate() bool {
	if x != nil {
		return x.UpToDate
	}
	return false
}

func (x *GetHealthResponse) GetProcessedTick() uint32 {
	if x != nil {
		return x.ProcessedTick
	}
	return 0
}

func (x *GetHealthResponse) GetLiveEpoch() uint32 {
	if x != nil {
		return x.LiveEpoch
	}
	return 0
}

func (x *GetHealthResponse) GetLiveTick() uint32 {
	if x != nil {
		return x.LiveTick
	}
	return 0
}

type ProcessedTickInterval struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	InitialProcessedTick uint32                 `protobuf:"varint,1,opt,name=initial_processed_tick,json=initialProcessedTick,proto3" json:"initial_processed_tick,omitempty"`
	LastProcessedTick    uint32                 `protobuf:"varint,2,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProcessedTickInterval) Reset() {
	*x = ProcessedTickInterval{}
	mi := &file_archive_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessedTickInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTickInterval) ProtoMessage() {}

func (x *ProcessedTickInterval) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTickInterval.ProtoReflect.Descriptor instead.
func (*ProcessedTickInterval) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{22}
}

func (x *ProcessedTickInterval) GetInitialProcessedTick() uint32 {
	if x != nil {
		return x.InitialProcessedTick
	}
	return 0
}

func (x *ProcessedTickInterval) GetLastProcessedTick() uint32 {
	if x != nil {
		return x.LastProcessedTick
	}
	return 0
}

type ProcessedTickIntervalsPerEpoch struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Epoch         uint32                   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Intervals     []*ProcessedTickInterval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessedTickIntervalsPerEpoch) Reset() {
	*x = ProcessedTickIntervalsPerEpoch{}
	mi := &file_archive_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessedTickIntervalsPerEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTickIntervalsPerEpoch) ProtoMessage() {}

func (x *ProcessedTickIntervalsPerEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTickIntervalsPerEpoch.ProtoReflect.Descriptor instead.
func (*ProcessedTickIntervalsPerEpoch) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{23}
}

func (x *ProcessedTickIntervalsPerEpoch) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ProcessedTickIntervalsPerEpoch) GetIntervals() []*ProcessedTickInterval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type TransactionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MoneyFlew     bool                   `protobuf:"varint,3,opt,name=money_flew,json=moneyFlew,proto3" json:"money_flew,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionData) Reset() {
	*x = TransactionData{}
	mi := &file_archive_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionData) ProtoMessage() {}

func (x *TransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionData.ProtoReflect.Descriptor instead.
func (*TransactionData) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{24}
}

func (x *TransactionData) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransactionData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionData) GetMoneyFlew() bool {
	if x != nil {
		return x.MoneyFlew
	}
	return false
}

type GetLatestTickResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatestTick    uint32                 `protobuf:"varint,1,opt,name=latest_tick,json=latestTick,proto3" json:"latest_tick,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestTickResponse) Reset() {
	*x = GetLatestTickResponse{}
	mi := &file_archive_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestTickResponse) ProtoMessage() {}

func (x *GetLatestTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestTickResponse.ProtoReflect.Descriptor instead.
func (*GetLatestTickResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{25}
}

func (x *GetLatestTickResponse) GetLatestTick() uint32 {
	if x != nil {
		return x.LatestTick
	}
	return 0
}

type GetQuorumRequestV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickNumber    uint32                 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuorumRequestV2) Reset() {
	*x = GetQuorumRequestV2{}
	mi := &file_archive_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuorumRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuorumRequestV2) ProtoMessage() {}

func (x *GetQuorumRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuorumRequestV2.ProtoReflect.Descriptor instead.
func (*GetQuorumRequestV2) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{26}
}

func (x *GetQuorumRequestV2) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

type GetTickTransactionsRequestV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickNumber    uint32                 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTickTransactionsRequestV2) Reset() {
	*x = GetTickTransactionsRequestV2{}
	mi := &file_archive_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTickTransactionsRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickTransactionsRequestV2) ProtoMessage() {}

func (x *GetTickTransactionsRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickTransactionsRequestV2.ProtoReflect.Descriptor instead.
func (*GetTickTransactionsRequestV2) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{27}
}

func (x *GetTickTransactionsRequestV2) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

type GetTickTransactionsResponseV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*TransactionData     `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTickTransactionsResponseV2) Reset() {
	*x = GetTickTransactionsResponseV2{}
	mi := &file_archive_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTickTransactionsResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickTransactionsResponseV2) ProtoMessage() {}

func (x *GetTickTransactionsResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickTransactionsResponseV2.ProtoReflect.Descriptor instead.
func (*GetTickTransactionsResponseV2) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{28}
}

func (x *GetTickTransactionsResponseV2) GetTransactions() []*TransactionData {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetTransactionRequestV2 struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionHash string                 `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTransactionRequestV2) Reset() {
	*x = GetTransactionRequestV2{}
	mi := &file_archive_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequestV2) ProtoMessage() {}

func (x *GetTransactionRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequestV2.ProtoReflect.Descriptor instead.
func (*GetTransactionRequestV2) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{29}
}

func (x *GetTransactionRequestV2) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

type GetTransactionResponseV2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MoneyFlew     bool                   `protobuf:"varint,3,opt,name=money_flew,json=moneyFlew,proto3" json:"money_flew,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionResponseV2) Reset() {
	*x = GetTransactionResponseV2{}
	mi := &file_archive_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponseV2) ProtoMessage() {}

func (x *GetTransactionResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponseV2.ProtoReflect.Descriptor instead.
func (*GetTransactionResponseV2) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{30}
}

func (x *GetTransactionResponseV2) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *GetTransactionResponseV2) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetTransactionResponseV2) GetMoneyFlew() bool {
	if x != nil {
		return x.MoneyFlew
	}
	return false
}

var File_archive_proto protoreflect.FileDescriptor

const file_archive_proto_rawDesc = "" +
	"\n" +
	"\rarchive.proto\x12\x14qubic.archiver.v2.pb\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xb5\x02\n" +
	"\bTickData\x12%\n" +
	"\x0ecomputor_index\x18\x01 \x01(\rR\rcomputorIndex\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\rR\x05epoch\x12\x1f\n" +
	"\vtick_number\x18\x03 \x01(\rR\n" +
	"tickNumber\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\x12\x1d\n" +
	"\n" +
	"var_struct\x18\x05 \x01(\fR\tvarStruct\x12\x1b\n" +
	"\ttime_lock\x18\x06 \x01(\fR\btimeLock\x12'\n" +
	"\x0ftransaction_ids\x18\a \x03(\tR\x0etransactionIds\x12#\n" +
	"\rcontract_fees\x18\b \x03(\x03R\fcontractFees\x12#\n" +
	"\rsignature_hex\x18\t \x01(\tR\fsignatureHex\"5\n" +
	"\x12GetTickDataRequest\x12\x1f\n" +
	"\vtick_number\x18\x01 \x01(\rR\n" +
	"tickNumber\"R\n" +
	"\x13GetTickDataResponse\x12;\n" +
	"\ttick_data\x18\x01 \x01(\v2\x1e.qubic.archiver.v2.pb.TickDataR\btickData\"\x91\x02\n" +
	"\vTransaction\x12\x1b\n" +
	"\tsource_id\x18\x01 \x01(\tR\bsourceId\x12\x17\n" +
	"\adest_id\x18\x02 \x01(\tR\x06destId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\x12\x1f\n" +
	"\vtick_number\x18\x04 \x01(\rR\n" +
	"tickNumber\x12\x1d\n" +
	"\n" +
	"input_type\x18\x05 \x01(\rR\tinputType\x12\x1d\n" +
	"\n" +
	"input_size\x18\x06 \x01(\rR\tinputSize\x12\x1b\n" +
	"\tinput_hex\x18\a \x01(\tR\binputHex\x12#\n" +
	"\rsignature_hex\x18\b \x01(\tR\fsignatureHex\x12\x13\n" +
	"\x05tx_id\x18\t \x01(\tR\x04txId\"F\n" +
	"\x11TransactionStatus\x12\x13\n" +
	"\x05tx_id\x18\x01 \x01(\tR\x04txId\x12\x1c\n" +
	"\tmoneyFlew\x18\x02 \x01(\bR\tmoneyFlew\"e\n" +
	"\x16TickTransactionsStatus\x12K\n" +
	"\ftransactions\x18\x01 \x03(\v2'.qubic.archiver.v2.pb.TransactionStatusR\ftransactions\"\xd5\x02\n" +
	"\x0eQuorumTickData\x12]\n" +
	"\x15quorum_tick_structure\x18\x01 \x01(\v2).qubic.archiver.v2.pb.QuorumTickStructureR\x13quorumTickStructure\x12x\n" +
	"\x18quorum_diff_per_computor\x18\x02 \x03(\v2?.qubic.archiver.v2.pb.QuorumTickData.QuorumDiffPerComputorEntryR\x15quorumDiffPerComputor\x1aj\n" +
	"\x1aQuorumDiffPerComputorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .qubic.archiver.v2.pb.QuorumDiffR\x05value:\x028\x01\"\xbc\x03\n" +
	"\x13QuorumTickStructure\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\rR\x05epoch\x12\x1f\n" +
	"\vtick_number\x18\x03 \x01(\rR\n" +
	"tickNumber\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\x12F\n" +
	" prev_resource_testing_digest_hex\x18\x05 \x01(\tR\x1cprevResourceTestingDigestHex\x127\n" +
	"\x18prev_spectrum_digest_hex\x18\x06 \x01(\tR\x15prevSpectrumDigestHex\x127\n" +
	"\x18prev_universe_digest_hex\x18\a \x01(\tR\x15prevUniverseDigestHex\x127\n" +
	"\x18prev_computer_digest_hex\x18\b \x01(\tR\x15prevComputerDigestHex\x12\"\n" +
	"\rtx_digest_hex\x18\t \x01(\tR\vtxDigestHex\x129\n" +
	"\x19prev_transaction_body_hex\x18\n" +
	" \x01(\tR\x16prevTransactionBodyHex\"\xba\x03\n" +
	"\n" +
	"QuorumDiff\x12J\n" +
	"\"salted_resource_testing_digest_hex\x18\x01 \x01(\tR\x1esaltedResourceTestingDigestHex\x12;\n" +
	"\x1asalted_spectrum_digest_hex\x18\x02 \x01(\tR\x17saltedSpectrumDigestHex\x12;\n" +
	"\x1asalted_universe_digest_hex\x18\x03 \x01(\tR\x17saltedUniverseDigestHex\x12;\n" +
	"\x1asalted_computer_digest_hex\x18\x04 \x01(\tR\x17saltedComputerDigestHex\x12E\n" +
	" expected_next_tick_tx_digest_hex\x18\x05 \x01(\tR\x1bexpectedNextTickTxDigestHex\x12#\n" +
	"\rsignature_hex\x18\x06 \x01(\tR\fsignatureHex\x12=\n" +
	"\x1bsalted_transaction_body_hex\x18\a \x01(\tR\x18saltedTransactionBodyHex\"\xe7\x02\n" +
	"\x14QuorumTickDataStored\x12]\n" +
	"\x15quorum_tick_structure\x18\x01 \x01(\v2).qubic.archiver.v2.pb.QuorumTickStructureR\x13quorumTickStructure\x12~\n" +
	"\x18quorum_diff_per_computor\x18\x02 \x03(\v2E.qubic.archiver.v2.pb.QuorumTickDataStored.QuorumDiffPerComputorEntryR\x15quorumDiffPerComputor\x1ap\n" +
	"\x1aQuorumDiffPerComputorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.qubic.archiver.v2.pb.QuorumDiffStoredR\x05value:\x028\x01\"~\n" +
	"\x10QuorumDiffStored\x12E\n" +
	" expected_next_tick_tx_digest_hex\x18\x05 \x01(\tR\x1bexpectedNextTickTxDigestHex\x12#\n" +
	"\rsignature_hex\x18\x06 \x01(\tR\fsignatureHex\"\xa5\x02\n" +
	"#LastTickQuorumDataPerEpochIntervals\x12\x8d\x01\n" +
	"\x18quorum_data_per_interval\x18\x01 \x03(\v2T.qubic.archiver.v2.pb.LastTickQuorumDataPerEpochIntervals.QuorumDataPerIntervalEntryR\x15quorumDataPerInterval\x1an\n" +
	"\x1aQuorumDataPerIntervalEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.qubic.archiver.v2.pb.QuorumTickDataR\x05value:\x028\x01\";\n" +
	"\x18GetQuorumTickDataRequest\x12\x1f\n" +
	"\vtick_number\x18\x01 \x01(\rR\n" +
	"tickNumber\"k\n" +
	"\x19GetQuorumTickDataResponse\x12N\n" +
	"\x10quorum_tick_data\x18\x01 \x01(\v2$.qubic.archiver.v2.pb.QuorumTickDataR\x0equorumTickData\"w\n" +
	"\x1fGetQuorumTickDataResponseStored\x12T\n" +
	"\x10quorum_tick_data\x18\x01 \x01(\v2*.qubic.archiver.v2.pb.QuorumTickDataStoredR\x0equorumTickData\"\x87\x01\n" +
	"\tComputors\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\rR\x05epoch\x12\x1f\n" +
	"\vtick_number\x18\x02 \x01(\rR\n" +
	"tickNumber\x12\x1e\n" +
	"\n" +
	"identities\x18\x03 \x03(\tR\n" +
	"identities\x12#\n" +
	"\rsignature_hex\x18\x04 \x01(\tR\fsignatureHex\"+\n" +
	"\x13GetComputorsRequest\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\rR\x05epoch\"U\n" +
	"\x14GetComputorsResponse\x12=\n" +
	"\tcomputors\x18\x01 \x01(\v2\x1f.qubic.archiver.v2.pb.ComputorsR\tcomputors\"N\n" +
	"\rComputorsList\x12=\n" +
	"\tcomputors\x18\x01 \x03(\v2\x1f.qubic.archiver.v2.pb.ComputorsR\tcomputors\"F\n" +
	"\rProcessedTick\x12\x1f\n" +
	"\vtick_number\x18\x01 \x01(\rR\n" +
	"tickNumber\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\rR\x05epoch\"\xeb\x01\n" +
	"\x11GetStatusResponse\x12S\n" +
	"\x13last_processed_tick\x18\x01 \x01(\v2#.qubic.archiver.v2.pb.ProcessedTickR\x11lastProcessedTick\x12\x80\x01\n" +
	"\"processed_tick_intervals_per_epoch\x18\x02 \x03(\v24.qubic.archiver.v2.pb.ProcessedTickIntervalsPerEpochR\x1eprocessedTickIntervalsPerEpoch\"\xac\x01\n" +
	"\x11GetHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1c\n" +
	"\n" +
	"up_to_date\x18\x02 \x01(\bR\bupToDate\x12%\n" +
	"\x0eprocessed_tick\x18\x03 \x01(\rR\rprocessedTick\x12\x1d\n" +
	"\n" +
	"live_epoch\x18\x04 \x01(\rR\tliveEpoch\x12\x1b\n" +
	"\tlive_tick\x18\x05 \x01(\rR\bliveTick\"}\n" +
	"\x15ProcessedTickInterval\x124\n" +
	"\x16initial_processed_tick\x18\x01 \x01(\rR\x14initialProcessedTick\x12.\n" +
	"\x13last_processed_tick\x18\x02 \x01(\rR\x11lastProcessedTick\"\x81\x01\n" +
	"\x1eProcessedTickIntervalsPerEpoch\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\rR\x05epoch\x12I\n" +
	"\tintervals\x18\x02 \x03(\v2+.qubic.archiver.v2.pb.ProcessedTickIntervalR\tintervals\"\x93\x01\n" +
	"\x0fTransactionData\x12C\n" +
	"\vtransaction\x18\x01 \x01(\v2!.qubic.archiver.v2.pb.TransactionR\vtransaction\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x04R\ttimestamp\x12\x1d\n" +
	"\n" +
	"money_flew\x18\x03 \x01(\bR\tmoneyFlew\"8\n" +
	"\x15GetLatestTickResponse\x12\x1f\n" +
	"\vlatest_tick\x18\x01 \x01(\rR\n" +
	"latestTick\"5\n" +
	"\x12GetQuorumRequestV2\x12\x1f\n" +
	"\vtick_number\x18\x01 \x01(\rR\n" +
	"tickNumber\"?\n" +
	"\x1cGetTickTransactionsRequestV2\x12\x1f\n" +
	"\vtick_number\x18\x01 \x01(\rR\n" +
	"tickNumber\"j\n" +
	"\x1dGetTickTransactionsResponseV2\x12I\n" +
	"\ftransactions\x18\x01 \x03(\v2%.qubic.archiver.v2.pb.TransactionDataR\ftransactions\"D\n" +
	"\x17GetTransactionRequestV2\x12)\n" +
	"\x10transaction_hash\x18\x01 \x01(\tR\x0ftransactionHash\"\x9c\x01\n" +
	"\x18GetTransactionResponseV2\x12C\n" +
	"\vtransaction\x18\x01 \x01(\v2!.qubic.archiver.v2.pb.TransactionR\vtransaction\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x04R\ttimestamp\x12\x1d\n" +
	"\n" +
	"money_flew\x18\x03 \x01(\bR\tmoneyFlew2\xd8\a\n" +
	"\x0eArchiveService\x12]\n" +
	"\tGetStatus\x12\x16.google.protobuf.Empty\x1a'.qubic.archiver.v2.pb.GetStatusResponse\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/status\x12\xab\x01\n" +
	"\x15GetTickTransactionsV2\x122.qubic.archiver.v2.pb.GetTickTransactionsRequestV2\x1a3.qubic.archiver.v2.pb.GetTickTransactionsResponseV2\")\x82\xd3\xe4\x93\x02#\x12!/ticks/{tick_number}/transactions\x12\x8a\x01\n" +
	"\vGetTickData\x12(.qubic.archiver.v2.pb.GetTickDataRequest\x1a).qubic.archiver.v2.pb.GetTickDataResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/ticks/{tick_number}/tick-data\x12\xa0\x01\n" +
	"\x13GetTickQuorumDataV2\x12..qubic.archiver.v2.pb.GetQuorumTickDataRequest\x1a/.qubic.archiver.v2.pb.GetQuorumTickDataResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /ticks/{tick_number}/quorum-data\x12\x88\x01\n" +
	"\fGetComputors\x12).qubic.archiver.v2.pb.GetComputorsRequest\x1a*.qubic.archiver.v2.pb.GetComputorsResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/epochs/{epoch}/computors\x12\x9b\x01\n" +
	"\x10GetTransactionV2\x12-.qubic.archiver.v2.pb.GetTransactionRequestV2\x1a..qubic.archiver.v2.pb.GetTransactionResponseV2\"(\x82\xd3\xe4\x93\x02\"\x12 /transactions/{transaction_hash}\x12`\n" +
	"\tGetHealth\x12\x16.google.protobuf.Empty\x1a'.qubic.archiver.v2.pb.GetHealthResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/healthB.Z,github.com/qubic/go-archiver-v2-v2/protobuf/b\x06proto3"

var (
	file_archive_proto_rawDescOnce sync.Once
	file_archive_proto_rawDescData []byte
)

func file_archive_proto_rawDescGZIP() []byte {
	file_archive_proto_rawDescOnce.Do(func() {
		file_archive_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_archive_proto_rawDesc), len(file_archive_proto_rawDesc)))
	})
	return file_archive_proto_rawDescData
}

var file_archive_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_archive_proto_goTypes = []any{
	(*TickData)(nil),                            // 0: qubic.archiver.v2.pb.TickData
	(*GetTickDataRequest)(nil),                  // 1: qubic.archiver.v2.pb.GetTickDataRequest
	(*GetTickDataResponse)(nil),                 // 2: qubic.archiver.v2.pb.GetTickDataResponse
	(*Transaction)(nil),                         // 3: qubic.archiver.v2.pb.Transaction
	(*TransactionStatus)(nil),                   // 4: qubic.archiver.v2.pb.TransactionStatus
	(*TickTransactionsStatus)(nil),              // 5: qubic.archiver.v2.pb.TickTransactionsStatus
	(*QuorumTickData)(nil),                      // 6: qubic.archiver.v2.pb.QuorumTickData
	(*QuorumTickStructure)(nil),                 // 7: qubic.archiver.v2.pb.QuorumTickStructure
	(*QuorumDiff)(nil),                          // 8: qubic.archiver.v2.pb.QuorumDiff
	(*QuorumTickDataStored)(nil),                // 9: qubic.archiver.v2.pb.QuorumTickDataStored
	(*QuorumDiffStored)(nil),                    // 10: qubic.archiver.v2.pb.QuorumDiffStored
	(*LastTickQuorumDataPerEpochIntervals)(nil), // 11: qubic.archiver.v2.pb.LastTickQuorumDataPerEpochIntervals
	(*GetQuorumTickDataRequest)(nil),            // 12: qubic.archiver.v2.pb.GetQuorumTickDataRequest
	(*GetQuorumTickDataResponse)(nil),           // 13: qubic.archiver.v2.pb.GetQuorumTickDataResponse
	(*GetQuorumTickDataResponseStored)(nil),     // 14: qubic.archiver.v2.pb.GetQuorumTickDataResponseStored
	(*Computors)(nil),                           // 15: qubic.archiver.v2.pb.Computors
	(*GetComputorsRequest)(nil),                 // 16: qubic.archiver.v2.pb.GetComputorsRequest
	(*GetComputorsResponse)(nil),                // 17: qubic.archiver.v2.pb.GetComputorsResponse
	(*ComputorsList)(nil),                       // 18: qubic.archiver.v2.pb.ComputorsList
	(*ProcessedTick)(nil),                       // 19: qubic.archiver.v2.pb.ProcessedTick
	(*GetStatusResponse)(nil),                   // 20: qubic.archiver.v2.pb.GetStatusResponse
	(*GetHealthResponse)(nil),                   // 21: qubic.archiver.v2.pb.GetHealthResponse
	(*ProcessedTickInterval)(nil),               // 22: qubic.archiver.v2.pb.ProcessedTickInterval
	(*ProcessedTickIntervalsPerEpoch)(nil),      // 23: qubic.archiver.v2.pb.ProcessedTickIntervalsPerEpoch
	(*TransactionData)(nil),                     // 24: qubic.archiver.v2.pb.TransactionData
	(*GetLatestTickResponse)(nil),               // 25: qubic.archiver.v2.pb.GetLatestTickResponse
	(*GetQuorumRequestV2)(nil),                  // 26: qubic.archiver.v2.pb.GetQuorumRequestV2
	(*GetTickTransactionsRequestV2)(nil),        // 27: qubic.archiver.v2.pb.GetTickTransactionsRequestV2
	(*GetTickTransactionsResponseV2)(nil),       // 28: qubic.archiver.v2.pb.GetTickTransactionsResponseV2
	(*GetTransactionRequestV2)(nil),             // 29: qubic.archiver.v2.pb.GetTransactionRequestV2
	(*GetTransactionResponseV2)(nil),            // 30: qubic.archiver.v2.pb.GetTransactionResponseV2
	nil,                                         // 31: qubic.archiver.v2.pb.QuorumTickData.QuorumDiffPerComputorEntry
	nil,                                         // 32: qubic.archiver.v2.pb.QuorumTickDataStored.QuorumDiffPerComputorEntry
	nil,                                         // 33: qubic.archiver.v2.pb.LastTickQuorumDataPerEpochIntervals.QuorumDataPerIntervalEntry
	(*emptypb.Empty)(nil),                       // 34: google.protobuf.Empty
}
var file_archive_proto_depIdxs = []int32{
	0,  // 0: qubic.archiver.v2.pb.GetTickDataResponse.tick_data:type_name -> qubic.archiver.v2.pb.TickData
	4,  // 1: qubic.archiver.v2.pb.TickTransactionsStatus.transactions:type_name -> qubic.archiver.v2.pb.TransactionStatus
	7,  // 2: qubic.archiver.v2.pb.QuorumTickData.quorum_tick_structure:type_name -> qubic.archiver.v2.pb.QuorumTickStructure
	31, // 3: qubic.archiver.v2.pb.QuorumTickData.quorum_diff_per_computor:type_name -> qubic.archiver.v2.pb.QuorumTickData.QuorumDiffPerComputorEntry
	7,  // 4: qubic.archiver.v2.pb.QuorumTickDataStored.quorum_tick_structure:type_name -> qubic.archiver.v2.pb.QuorumTickStructure
	32, // 5: qubic.archiver.v2.pb.QuorumTickDataStored.quorum_diff_per_computor:type_name -> qubic.archiver.v2.pb.QuorumTickDataStored.QuorumDiffPerComputorEntry
	33, // 6: qubic.archiver.v2.pb.LastTickQuorumDataPerEpochIntervals.quorum_data_per_interval:type_name -> qubic.archiver.v2.pb.LastTickQuorumDataPerEpochIntervals.QuorumDataPerIntervalEntry
	6,  // 7: qubic.archiver.v2.pb.GetQuorumTickDataResponse.quorum_tick_data:type_name -> qubic.archiver.v2.pb.QuorumTickData
	9,  // 8: qubic.archiver.v2.pb.GetQuorumTickDataResponseStored.quorum_tick_data:type_name -> qubic.archiver.v2.pb.QuorumTickDataStored
	15, // 9: qubic.archiver.v2.pb.GetComputorsResponse.computors:type_name -> qubic.archiver.v2.pb.Computors
	15, // 10: qubic.archiver.v2.pb.ComputorsList.computors:type_name -> qubic.archiver.v2.pb.Computors
	19, // 11: qubic.archiver.v2.pb.GetStatusResponse.last_processed_tick:type_name -> qubic.archiver.v2.pb.ProcessedTick
	23, // 12: qubic.archiver.v2.pb.GetStatusResponse.processed_tick_intervals_per_epoch:type_name -> qubic.archiver.v2.pb.ProcessedTickIntervalsPerEpoch
	22, // 13: qubic.archiver.v2.pb.ProcessedTickIntervalsPerEpoch.intervals:type_name -> qubic.archiver.v2.pb.ProcessedTickInterval
	3,  // 14: qubic.archiver.v2.pb.TransactionData.transaction:type_name -> qubic.archiver.v2.pb.Transaction
	24, // 15: qubic.archiver.v2.pb.GetTickTransactionsResponseV2.transactions:type_name -> qubic.archiver.v2.pb.TransactionData
	3,  // 16: qubic.archiver.v2.pb.GetTransactionResponseV2.transaction:type_name -> qubic.archiver.v2.pb.Transaction
	8,  // 17: qubic.archiver.v2.pb.QuorumTickData.QuorumDiffPerComputorEntry.value:type_name -> qubic.archiver.v2.pb.QuorumDiff
	10, // 18: qubic.archiver.v2.pb.QuorumTickDataStored.QuorumDiffPerComputorEntry.value:type_name -> qubic.archiver.v2.pb.QuorumDiffStored
	6,  // 19: qubic.archiver.v2.pb.LastTickQuorumDataPerEpochIntervals.QuorumDataPerIntervalEntry.value:type_name -> qubic.archiver.v2.pb.QuorumTickData
	34, // 20: qubic.archiver.v2.pb.ArchiveService.GetStatus:input_type -> google.protobuf.Empty
	27, // 21: qubic.archiver.v2.pb.ArchiveService.GetTickTransactionsV2:input_type -> qubic.archiver.v2.pb.GetTickTransactionsRequestV2
	1,  // 22: qubic.archiver.v2.pb.ArchiveService.GetTickData:input_type -> qubic.archiver.v2.pb.GetTickDataRequest
	12, // 23: qubic.archiver.v2.pb.ArchiveService.GetTickQuorumDataV2:input_type -> qubic.archiver.v2.pb.GetQuorumTickDataRequest
	16, // 24: qubic.archiver.v2.pb.ArchiveService.GetComputors:input_type -> qubic.archiver.v2.pb.GetComputorsRequest
	29, // 25: qubic.archiver.v2.pb.ArchiveService.GetTransactionV2:input_type -> qubic.archiver.v2.pb.GetTransactionRequestV2
	34, // 26: qubic.archiver.v2.pb.ArchiveService.GetHealth:input_type -> google.protobuf.Empty
	20, // 27: qubic.archiver.v2.pb.ArchiveService.GetStatus:output_type -> qubic.archiver.v2.pb.GetStatusResponse
	28, // 28: qubic.archiver.v2.pb.ArchiveService.GetTickTransactionsV2:output_type -> qubic.archiver.v2.pb.GetTickTransactionsResponseV2
	2,  // 29: qubic.archiver.v2.pb.ArchiveService.GetTickData:output_type -> qubic.archiver.v2.pb.GetTickDataResponse
	13, // 30: qubic.archiver.v2.pb.ArchiveService.GetTickQuorumDataV2:output_type -> qubic.archiver.v2.pb.GetQuorumTickDataResponse
	17, // 31: qubic.archiver.v2.pb.ArchiveService.GetComputors:output_type -> qubic.archiver.v2.pb.GetComputorsResponse
	30, // 32: qubic.archiver.v2.pb.ArchiveService.GetTransactionV2:output_type -> qubic.archiver.v2.pb.GetTransactionResponseV2
	21, // 33: qubic.archiver.v2.pb.ArchiveService.GetHealth:output_type -> qubic.archiver.v2.pb.GetHealthResponse
	27, // [27:34] is the sub-list for method output_type
	20, // [20:27] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_archive_proto_init() }
func file_archive_proto_init() {
	if File_archive_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_archive_proto_rawDesc), len(file_archive_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_archive_proto_goTypes,
		DependencyIndexes: file_archive_proto_depIdxs,
		MessageInfos:      file_archive_proto_msgTypes,
	}.Build()
	File_archive_proto = out.File
	file_archive_proto_goTypes = nil
	file_archive_proto_depIdxs = nil
}
